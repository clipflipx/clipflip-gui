print("Initializing Clipflip GUI...")
local incognito = {"incognito"}
if not table.find(incognito, string.lower(identifyexecutor())) then
    local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local supported = {"solara", "codex", "arceus x", "delta", "hydrogen", "vega x", "frost", "frostware", "ethos", "alysse", "alysse android"}
local unsupported = {"incognito", "evon", "fluxus"}
local Window = Rayfield:CreateWindow({
   Name = "Clipflip GUI V2",
   LoadingTitle = "Clipflip GUI Development Edition",
   LoadingSubtitle = "For testing purposes only",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil,
      FileName = "ClipflipGUIV2"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   }
})
local Tab = Window:CreateTab("Executor Testing", 4483362458)
local Tab2 = Window:CreateTab("Popular Scripts", 4483362458)
local Tab3 = Window:CreateTab("Useful Tools", 4483362458)
local Tab100 = Window:CreateTab("About", 4483362458)
local PrintName = Tab:CreateButton({
   Name = "Print Executor Name",
   Callback = function()
   print(identifyexecutor())
   end,
})
local UNCTest = Tab:CreateButton({
   Name = "Executor UNC Test",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/unified-naming-convention/NamingStandard/main/UNCCheckEnv.lua"))()
   end,
})
local GetExecLevel = Tab:CreateButton({
   Name = "Print Executor Level",
   Callback = function()
   printidentity()
   end,
})
local VulnsTest = Tab:CreateButton({
   Name = "Executor Vulnerability Test",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/fissurectomy/test/main/executor_vuln_test.lua"))()
   end,
})
local IYR = Tab2:CreateButton({
   Name = "Infinite Yield Reborn",
   Callback = function()
   loadstring(game:HttpGet("https://github.com/fuckusfm/infiniteyield-reborn/raw/master/source"))()
   end,
})
local NamelessAdmin = Tab2:CreateButton({
   Name = "Nameless Admin",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/FilteringEnabled/NamelessAdmin/main/Source"))()
   end,
})
local AntiLog = Tab2:CreateButtob({
   Name = "No Logging",
   Callback = function()
   loadstring(game:HttpGet('https://rawscripts.net/raw/Universal-Script-NoLogging-13339'))()
   end,
})
local DEX = Tab2:CreateButton({
   Name = "DEX Explorer",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"))()
   end,
})
local Reaper = Tab2:CreateButton({
   Name = "Reaper Hub",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/AyoReaper/Reaper-Hub/main/loader.lua"))()
   end,
})
local Emoji = Tab2:CreateButton({
   Name = "Emoji Chat",
   Callback = function()
   loadstring(game:HttpGetAsync'https://raw.githubusercontent.com/Exunys/Emoji-Chat/main/Resources/Main.lua')''
   end,
})
local Krunox = Tab2:CreateButton({
   Name = "Krunox",
   Callback = function()
   loadstring(game:HttpGet("https://pastebin.com/raw/b2cnJNar"))()
   end,
})
local VR = Tab2:CreateButton({
   Name = "CLOVR",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/vr.lua"))()()
   end,
})
local RSPY = Tab2:CreateButton({
   Name = "Remote Spy",
   Callback = function()
   loadstring(game:HttpGetAsync("https://github.com/richie0866/remote-spy/releases/latest/download/RemoteSpy.lua"))()
   end,
})
local ESP = Tab2:CreateButton({
   Name = "Unnamed ESP",
   Callback = function()
   loadstring(game:HttpGet('https://raw.githubusercontent.com/ic3w0lf22/Unnamed-ESP/master/UnnamedESP.lua'))()
   end,
})
local Sirius = Tab2:CreateButton({
    Name = "Sirius",
    Callback = function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/SiriusSoftwareLTD/sirius/request/source.lua"))()
    end,
})
local Thunder = Tab2:CreateButton({
    Name = "Thunder Client",
    Callback = function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/ThunderScriptSolutions/ThunderClientForSolara/main/ThunderClientForSolara"))()
    end,
})
local SaveInstance = Tab3:CreateButton({
    Name = "Download Game",
    Callback = function()
    saveinstance()
    end,
})
local FuckAdonis = Tab3:CreateButton({
    Name = "Bypass Adonis Anti-Cheat",
    Callback = function()
    loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/clipflip-exploits/bypass-adonis/main/source"))()
    end,
})
local FakePrivateSrv = Tab3:CreateButton({
    Name = "Teleport to a Fake Private Server",
    Callback = function()
    loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/clipflip-exploits/fake-private-server/main/source"))()
    end,
})
local AddUNC = Tab3:CreateButton({
    Name = "Improve UNC Support",
    Callback = function()
    loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-MoreUNC-13110"))()
    end,
})
local FpsUnlock = Tab3:CreateButton({
    Name = "Unlock FPS",
    Callback = function()
    setfpscap(1000)
    end,
})
local CopyGameId = Tab3:CreateButton({
    Name = "Copy Game ID",
    Callback = function()
    setclipboard(game.PlaceId)
    end,
})
local About1 = Tab100:CreateSection("You are using Clipflip GUI v2")
local About2 = Tab100:CreateSection("Development Edition")
local About3 = Tab100:CreateSection("version 2.0.20 - ".. identifyexecutor())
if not table.find(supported, string.lower(identifyexecutor())) then
    if not table.find(unsupported, string.lower(identifyexecutor())) then
        Rayfield:Notify({
   Title = "Clipflip GUI v2",
   Content = "You are using an unverified executor - ".. identifyexecutor().. ". Some features may not work. We recommend Solara or Arceus X.",
   Duration = 6.5,
   Image = 4483362458,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay",
         Callback = function()
      end
   },
},
})
    else
                Rayfield:Notify({
   Title = "Clipflip GUI v2",
   Content = "You are using an unsupported executor - ".. identifyexecutor().. ". Some features may not work. We recommend Solara or Arceus X.",
   Duration = 6.5,
   Image = 4483362458,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay",
         Callback = function()
      end
   },
},
})
    end
else
    print("Welcome to Clipflip GUI v2")
end
    else
    print("V2 GUI loading failed. Loading fallback GUI...")
        local GameName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Robojini/Tuturial_UI_Library/main/UI_Template_1"))()
local Window = Library.CreateLib("Clipflip GUI Fallback Menu", "RJTheme6")
local supported = {"solara", "codex", "arceus x", "delta", "hydrogen"}
local unsupported = {"incognito", "fluxus", "alysse", "alysse android", "evon"}
local solara = {"solara"}
local Tab = Window:NewTab("Executor Testing")
local Tab2 = Window:NewTab("Popular Scripts")
local Tab3 = Window:NewTab("Useful Tools")
local Tab4 = Window:NewTab("About")
local Section = Tab:NewSection("Executor Testing")
local Section2 = Tab2:NewSection("Popular Scripts")
local Section3 = Tab3:NewSection("Useful Tools")
local Section4 = Tab4:NewSection("Made by Clipflip")
local Section4a = Tab4:NewSection("Clipflip GUI Development Edition version 2.0.20")
local Section4d = Tab4:NewSection("Fallback Menu")
if not table.find(supported, string.lower(identifyexecutor())) then
    if not table.find(unsupported, string.lower(identifyexecutor())) then
        local Section4e = Tab4:NewSection(identifyexecutor().. "is an unverified executor")
        local Section4d = Tab4:NewSection("Some features may function correctly")
    else
        local Section4e = Tab4:NewSection(identifyexecutor().. " is an unsupported executor")
        local Section4d = Tab4:NewSection("Some features will function correctly")
    end
else
    local Section4e = Tab4:NewSection(identifyexecutor().. " is an officially supported executor")
end
Section:NewButton("UNC Test", "Test your executor's capabilities", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/unified-naming-convention/NamingStandard/main/UNCCheckEnv.lua"))()
end)
Section:NewButton("Get Executor Level", "Find out your executor's level", function()
    printidentity()
end)
Section:NewButton("Get Executor Name", "Find out your executor's name", function()
   print(identifyexecutor())
end)
Section:NewButton("Vulnerability Test", "Test your executor's safety", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/fissurectomy/test/main/executor_vuln_test.lua"))()
end)
Section2:NewButton("Infinite Yield Reborn", "Updated version of Infinite Yield with more features", function()
   loadstring(game:HttpGet("https://github.com/fuckusfm/infiniteyield-reborn/raw/master/source"))()
end)
Section2:NewButton("No Logging", "Anti Roblox chat logging script", function()
   loadstring(game:HttpGet('https://rawscripts.net/raw/Universal-Script-NoLogging-13339'))()
end)
Section2:NewButton("Nameless Admin", "Simple Admin Commands Script", function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/FilteringEnabled/NamelessAdmin/main/Source"))()
end)
Section2:NewButton("DEX", "Edit your game's environment like in ROBLOX Studio", function()
  loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"))()
end)
Section2:NewButton("CLOVR", "Simple VR script", function()
  loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/vr.lua"))()
end)
Section2:NewButton("Remote Spy", "Detect Remotes that are being fired", function()
  loadstring(game:HttpGetAsync("https://github.com/richie0866/remote-spy/releases/latest/download/RemoteSpy.lua"))()
end)
Section2:NewButton("Unnamed ESP", "Basic ESP for Roblox games", function()
  loadstring(game:HttpGet('https://raw.githubusercontent.com/ic3w0lf22/Unnamed-ESP/master/UnnamedESP.lua'))()
end)
Section2:NewButton("Krunox", "Krunox", function()
  loadstring(game:HttpGet("https://pastebin.com/raw/b2cnJNar"))()
end)
Section2:NewButton("Reaper Hub", "Reaper Hub", function()
  loadstring(game:HttpGet("https://raw.githubusercontent.com/AyoReaper/Reaper-Hub/main/loader.lua"))()
end)
Section2:NewButton("Emoji Chat", "Replace text with emojis, for example :skull:", function()
  loadstring(game:HttpGetAsync'https://raw.githubusercontent.com/Exunys/Emoji-Chat/main/Resources/Main.lua')''
end)
Section3:NewButton("Save Instance", "Save the game's map to your computer", function()
   saveinstance()
end)
Section3:NewButton("Bypass Adonis", "Bypass the Adonis Anti-Cheat", function()
   loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/clipflip-exploits/bypass-adonis/main/source"))()
end)
Section3:NewButton("Fake Private Server", "Create a fake Private Server and teleport to it", function()
   loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/clipflip-exploits/fake-private-server/main/source"))()
end)
Section3:NewButton("Add UNC", "Add/Imporve UNC Support", function()
    loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-MoreUNC-13110"))()
end)
Section2:NewButton("Thunder Client", "One of the best Arsenal scripts", function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/ThunderScriptSolutions/ThunderClientForSolara/main/ThunderClientForSolara"))()
end)
Section2:NewButton("Sirius", "All-in-one hub for exploiters", function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/SiriusSoftwareLTD/sirius/request/source.lua"))()
end)
Section3:NewButton("Unlock FPS", "Unlocks your FPS", function()
   setfpscap(1000)
   print("FPS Unlocked")
end)
Section3:NewButton("Copy Game ID", "Copies your game ID to clipboard", function()
   setclipboard(game.PlaceId)
end)
if not table.find(supported, string.lower(identifyexecutor())) then
    if not table.find(unsupported, string.lower(identifyexecutor())) then
        warn("You are using an unverified executor, we recommend using Solara or Arceus X")
        print("Clipflip GUI loaded with warnings")
    else
        warn("You are using an unsupported executor, we recommend using Solara or Arceus X")
        print("Clipflip GUI loaded with warnings")
    end
else
    print("Clipflip GUI loaded succesfully") 
end
    end
